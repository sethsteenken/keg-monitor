@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

<MudThemeProvider Theme="@theme" @bind-IsDarkMode="@isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudImage Src="/img/beer-tap.png" Alt="Beer tap" Class="rounded-lg" Fluid="true" ObjectFit="ObjectFit.Contain" Height="50" Width="50"></MudImage>
        <MudText Typo="Typo.h5" Class="ml-3">Keg Monitor</MudText>
        <MudSpacer />
        <MudSwitch CheckedChanged="ToggleDarkMode" Checked="@isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Dark Mode" />
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink Href="/display/" Match="NavLinkMatch.All">Display</MudNavLink>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavGroup Title="Beer" Expanded="true">
                <MudNavLink Href="/beer/" Match="NavLinkMatch.All">List</MudNavLink>
                <MudNavLink Href="/beer/edit/" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Add New</MudNavLink>
            </MudNavGroup>
            <MudNavGroup Title="Scales" Expanded="true">
                @foreach (var id in scaleIds)
                {
                    var href = $"/scale/edit/{id}/";
                    <MudNavLink Href="@href" Match="NavLinkMatch.All">Scale #@id</MudNavLink>
                }
                <MudNavLink Href="/scale/add/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Add">Add New</MudNavLink>
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@inject ProtectedSessionStorage ProtectedLocalStore
@inject IScaleDashboardQueryService QueryService

@code {
    bool drawerOpen = true;
    bool isDarkMode = ProtectedBrowserStorageExtensions.DefaultDarkMode;

    MudTheme theme = new MudTheme();
    IEnumerable<int> scaleIds = new List<int>();

    void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    protected async Task ToggleDarkMode()
    {
        isDarkMode = !isDarkMode;
        await ProtectedLocalStore.SetDarkThemeAsync(isDarkMode);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        isDarkMode = await ProtectedLocalStore.GetOrSetDarkThemeAsync(isDarkMode);
        if (isDarkMode != ProtectedBrowserStorageExtensions.DefaultDarkMode)
            StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        scaleIds = await QueryService.GetScaleIdsAsync();
    }
}