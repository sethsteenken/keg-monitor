@page "/beer/"
@using KegMonitor.Core.Entities

<PageHeader>Manage Beer List</PageHeader>

<MudTable Items="@Beers" Hover="true" Breakpoint="Breakpoint.None"
    Loading="@loading" LoadingProgressColor="Color.Info" Elevation="2" Bordered="true">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Beer, object>(b=>b.FullName)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Beer, object>(b=>b.Type)">Type</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Beer, object>(b=>b.ABV)">ABV</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Beer, object>(b=>b.TapDate)">Tap Date</MudTableSortLabel></MudTh>
        <MudTh>Image</MudTh>
        <MudTh>Manage</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.FullName</MudTd>
        <MudTd DataLabel="Type">@context.Type</MudTd>
        <MudTd DataLabel="ABV">@(context.ABV)%</MudTd>
        <MudTd DataLabel="TapDate">@(context.TapDate?.ToShortDateString())</MudTd>
        <MudTd DataLabel="Image">
            <MudImage Width="200" Height="60" Alt="@context.Name" Src="@context.ImagePathOrDefault" Elevation="15" Class="rounded-lg" ObjectFit="ObjectFit.Cover"></MudImage>
        </MudTd>
        <MudTd DataLabel="Manage">
            @{
                var editLink = $"/beer/edit/{context.Id}/"; 
            }
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Title="Edit" Href="@editLink"></MudIconButton>
            <MudIconButton Icon="@Icons.Material.Filled.LocalDrink" Color="Color.Default" OnClick="() => ShowPoursDialog(context.Id, context.Name)" />
        </MudTd>
    </RowTemplate>
</MudTable>

<MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" 
    Href="/beer/edit/" Size="Size.Large" Class="mt-4"  />

@inject IBeerQueryService QueryService
@inject IDialogService DialogService

@code {
    private bool loading;
    protected IEnumerable<Beer> Beers = new List<Beer>();

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        Beers = await QueryService.GetAllAsync();
        loading = false;
    }

    protected void ShowPoursDialog(int beerId, string beerName)
    {
        var parameters = new DialogParameters<BeerPoursDialog>();
        parameters.Add(x => x.BeerId, beerId);

        var options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true };

        DialogService.Show<BeerPoursDialog>($"{beerName} Pours", parameters, options);
    }
}