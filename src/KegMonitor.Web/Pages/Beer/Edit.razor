@page "/beer/edit/{Id:int?}/"

<PageHeader>@Title</PageHeader>

<EditForm Model="@model" OnValidSubmit="SubmitAsync">
    <DataAnnotationsValidator />

    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="pa-5">
                <MudTextField Label="Name" HelperText="Unique name. Should probably include a cat."
                          @bind-Value="model.Name" For="@(() => model.Name)"
                          Class="pb-2"/>
                <MudTextField Label="Type" HelperText="Beer type (IPA, Porter, etc.)"
                              @bind-Value="model.Type" For="@(() => model.Type)"
                              Class="pb-2" />
                <MudNumericField Label="ABV" HelperText="Alcohol by Volume"
                                 @bind-Value="model.ABV" For="@(() => model.ABV)"
                                 Variant="Variant.Text" Step=".1M"
                                 Class="pb-2"/>
                <MudTextField Label="Description" HelperText="Describe beer type, hops, etc." Variant="Variant.Text" 
                              @bind-Value="model.Description" For="@(() => model.Description)" Lines="5" />
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Class="pa-5">
                <InputFile id="fileInput" OnChange="UploadFilesAsync" hidden />
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Tertiary"
                           StartIcon="@Icons.Filled.Image"
                           for="fileInput">
                    Upload Image
                </MudButton>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Secondary" OnClick="() => model.ImagePath = null"></MudIconButton>
            </MudPaper>
            <MudPaper Class="pa-5">
                @if (model.ImagePath != null)
                {
                      <MudImage @bind-Src="model.ImagePath" 
                          Width="250" Height="250" Alt="@model.Name" 
                          Elevation="25" Class="rounded-lg ma-2" />
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Class="pa-2" Outlined="false" Elevation="0">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled"
                       Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save">Save</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
</EditForm>

@inject ISnackbar Snackbar
@inject IBeerCommandService CommandService
@inject IBeerQueryService QueryService
@inject IFileUploader FileUploader

@code {
    [Parameter]
    public int? Id { get; set; }

    protected string Title { get; private set; }

    BeerEditModel model = new BeerEditModel();

    protected override async Task OnParametersSetAsync()
    {
        Title = Id == null ? "Add new Beer" : "Edit Beer";
        model = await QueryService.BuildEditModelAsync(Id);
    }

    protected async Task SubmitAsync(EditContext context)
    {
        Id = await CommandService.SaveAsync(model);
        model.Id = Id;
        Snackbar.Add("Beer saved successfully.", Severity.Success, config => config.CloseAfterNavigation = true);
        StateHasChanged();
    }

    protected async Task UploadFilesAsync(InputFileChangeEventArgs e)
    {
        model.ImagePath = await FileUploader.UploadAsync(e.File);
        StateHasChanged();
    }
}
